<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="dbprojecttDataSet" targetNamespace="http://tempuri.org/dbprojecttDataSet.xsd" xmlns:mstns="http://tempuri.org/dbprojecttDataSet.xsd" xmlns="http://tempuri.org/dbprojecttDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="dbprojecttConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="dbprojecttConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.dbproject.Properties.Settings.GlobalReference.Default.dbprojecttConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AdminTableAdapter" GeneratorDataComponentClassName="AdminTableAdapter" Name="Admin" UserDataComponentName="AdminTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.Admin" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Admin] WHERE (([AdminID] = @Original_AdminID) AND ([Fname] = @Original_Fname) AND ([Lname] = @Original_Lname) AND ([GPA] = @Original_GPA) AND ([Street] = @Original_Street))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Fname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Fname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Lname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Lname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_GPA" Precision="3" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="GPA" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Street" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Street" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Admin] ([AdminID], [Fname], [Lname], [GPA], [Street]) VALUES (@AdminID, @Fname, @Lname, @GPA, @Street);
SELECT AdminID, Fname, Lname, GPA, Street FROM Admin WHERE (AdminID = @AdminID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Fname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Fname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Lname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Lname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@GPA" Precision="3" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="GPA" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Street" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Street" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AdminID, Fname, Lname, GPA, Street FROM dbo.Admin</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Admin] SET [AdminID] = @AdminID, [Fname] = @Fname, [Lname] = @Lname, [GPA] = @GPA, [Street] = @Street WHERE (([AdminID] = @Original_AdminID) AND ([Fname] = @Original_Fname) AND ([Lname] = @Original_Lname) AND ([GPA] = @Original_GPA) AND ([Street] = @Original_Street));
SELECT AdminID, Fname, Lname, GPA, Street FROM Admin WHERE (AdminID = @AdminID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Fname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Fname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Lname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Lname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@GPA" Precision="3" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="GPA" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Street" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Street" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Fname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Fname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Lname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Lname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_GPA" Precision="3" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="GPA" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Street" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Street" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AdminID" DataSetColumn="AdminID" />
              <Mapping SourceColumn="Fname" DataSetColumn="Fname" />
              <Mapping SourceColumn="Lname" DataSetColumn="Lname" />
              <Mapping SourceColumn="GPA" DataSetColumn="GPA" />
              <Mapping SourceColumn="Street" DataSetColumn="Street" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Assigned byTableAdapter" GeneratorDataComponentClassName="Assigned_byTableAdapter" Name="Assigned by" UserDataComponentName="Assigned byTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.[Assigned by]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Assigned by] WHERE (([AdminID] = @Original_AdminID) AND ([DID] = @Original_DID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_DID" Precision="10" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Assigned by] ([AdminID], [DID]) VALUES (@AdminID, @DID);
SELECT AdminID, DID FROM [Assigned by] WHERE (AdminID = @AdminID) AND (DID = @DID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@DID" Precision="10" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AdminID, DID FROM dbo.[Assigned by]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Assigned by] SET [AdminID] = @AdminID, [DID] = @DID WHERE (([AdminID] = @Original_AdminID) AND ([DID] = @Original_DID));
SELECT AdminID, DID FROM [Assigned by] WHERE (AdminID = @AdminID) AND (DID = @DID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@DID" Precision="10" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_DID" Precision="10" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AdminID" DataSetColumn="AdminID" />
              <Mapping SourceColumn="DID" DataSetColumn="DID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AssignsTableAdapter" GeneratorDataComponentClassName="AssignsTableAdapter" Name="Assigns" UserDataComponentName="AssignsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.Assigns" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Assigns] WHERE (([AdminID] = @Original_AdminID) AND ([StudID] = @Original_StudID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Assigns] ([AdminID], [StudID]) VALUES (@AdminID, @StudID);
SELECT AdminID, StudID FROM Assigns WHERE (AdminID = @AdminID) AND (StudID = @StudID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AdminID, StudID FROM dbo.Assigns</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Assigns] SET [AdminID] = @AdminID, [StudID] = @StudID WHERE (([AdminID] = @Original_AdminID) AND ([StudID] = @Original_StudID));
SELECT AdminID, StudID FROM Assigns WHERE (AdminID = @AdminID) AND (StudID = @StudID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AdminID" DataSetColumn="AdminID" />
              <Mapping SourceColumn="StudID" DataSetColumn="StudID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CourseTableAdapter" GeneratorDataComponentClassName="CourseTableAdapter" Name="Course" UserDataComponentName="CourseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.Course" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Course] WHERE (([Ccode] = @Original_Ccode) AND ([DID] = @Original_DID) AND ([Type] = @Original_Type) AND ([CreditHours] = @Original_CreditHours))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_DID" Precision="10" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CreditHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreditHours" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Course] ([Ccode], [DID], [Type], [CreditHours]) VALUES (@Ccode, @DID, @Type, @CreditHours);
SELECT Ccode, DID, Type, CreditHours FROM Course WHERE (Ccode = @Ccode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@DID" Precision="10" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CreditHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreditHours" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Ccode, DID, Type, CreditHours FROM dbo.Course</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Course] SET [Ccode] = @Ccode, [DID] = @DID, [Type] = @Type, [CreditHours] = @CreditHours WHERE (([Ccode] = @Original_Ccode) AND ([DID] = @Original_DID) AND ([Type] = @Original_Type) AND ([CreditHours] = @Original_CreditHours));
SELECT Ccode, DID, Type, CreditHours FROM Course WHERE (Ccode = @Ccode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@DID" Precision="10" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CreditHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreditHours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_DID" Precision="10" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CreditHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreditHours" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Ccode" DataSetColumn="Ccode" />
              <Mapping SourceColumn="DID" DataSetColumn="DID" />
              <Mapping SourceColumn="Type" DataSetColumn="Type" />
              <Mapping SourceColumn="CreditHours" DataSetColumn="CreditHours" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CreatesTableAdapter" GeneratorDataComponentClassName="CreatesTableAdapter" Name="Creates" UserDataComponentName="CreatesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.Creates" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Creates] WHERE (([AdminID] = @Original_AdminID) AND ([Ccode] = @Original_Ccode))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Creates] ([AdminID], [Ccode]) VALUES (@AdminID, @Ccode);
SELECT AdminID, Ccode FROM Creates WHERE (AdminID = @AdminID) AND (Ccode = @Ccode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AdminID, Ccode FROM dbo.Creates</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Creates] SET [AdminID] = @AdminID, [Ccode] = @Ccode WHERE (([AdminID] = @Original_AdminID) AND ([Ccode] = @Original_Ccode));
SELECT AdminID, Ccode FROM Creates WHERE (AdminID = @AdminID) AND (Ccode = @Ccode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AdminID" DataSetColumn="AdminID" />
              <Mapping SourceColumn="Ccode" DataSetColumn="Ccode" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DepartmentTableAdapter" GeneratorDataComponentClassName="DepartmentTableAdapter" Name="Department" UserDataComponentName="DepartmentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.Department" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Department] WHERE (([Name] = @Original_Name) AND ([DID] = @Original_DID) AND ([AdminID] = @Original_AdminID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_DID" Precision="10" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Department] ([Name], [DID], [AdminID]) VALUES (@Name, @DID, @AdminID);
SELECT Name, DID, AdminID FROM Department WHERE (DID = @DID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@DID" Precision="10" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Name, DID, AdminID FROM dbo.Department</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Department] SET [Name] = @Name, [DID] = @DID, [AdminID] = @AdminID WHERE (([Name] = @Original_Name) AND ([DID] = @Original_DID) AND ([AdminID] = @Original_AdminID));
SELECT Name, DID, AdminID FROM Department WHERE (DID = @DID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@DID" Precision="10" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_DID" Precision="10" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="DID" DataSetColumn="DID" />
              <Mapping SourceColumn="AdminID" DataSetColumn="AdminID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DependentsTableAdapter" GeneratorDataComponentClassName="DependentsTableAdapter" Name="Dependents" UserDataComponentName="DependentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.Dependents" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Dependents] WHERE (([Name] = @Original_Name) AND ([Relation] = @Original_Relation) AND ([Dnum] = @Original_Dnum) AND ([StaffID] = @Original_StaffID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Relation" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Relation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Dnum" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="Dnum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_StaffID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Dependents] ([Name], [Relation], [Dnum], [StaffID]) VALUES (@Name, @Relation, @Dnum, @StaffID);
SELECT Name, Relation, Dnum, StaffID FROM Dependents WHERE (Dnum = @Dnum)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Relation" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Relation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Dnum" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="Dnum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@StaffID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Name, Relation, Dnum, StaffID FROM dbo.Dependents</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Dependents] SET [Name] = @Name, [Relation] = @Relation, [Dnum] = @Dnum, [StaffID] = @StaffID WHERE (([Name] = @Original_Name) AND ([Relation] = @Original_Relation) AND ([Dnum] = @Original_Dnum) AND ([StaffID] = @Original_StaffID));
SELECT Name, Relation, Dnum, StaffID FROM Dependents WHERE (Dnum = @Dnum)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Relation" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Relation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Dnum" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="Dnum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@StaffID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Relation" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Relation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Dnum" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="Dnum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_StaffID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Relation" DataSetColumn="Relation" />
              <Mapping SourceColumn="Dnum" DataSetColumn="Dnum" />
              <Mapping SourceColumn="StaffID" DataSetColumn="StaffID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Enrolled byTableAdapter" GeneratorDataComponentClassName="Enrolled_byTableAdapter" Name="Enrolled by" UserDataComponentName="Enrolled byTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.[Enrolled by]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Enrolled by] WHERE (([AdminID] = @Original_AdminID) AND ([Ccode] = @Original_Ccode))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Enrolled by] ([AdminID], [Ccode]) VALUES (@AdminID, @Ccode);
SELECT AdminID, Ccode FROM [Enrolled by] WHERE (AdminID = @AdminID) AND (Ccode = @Ccode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AdminID, Ccode FROM dbo.[Enrolled by]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Enrolled by] SET [AdminID] = @AdminID, [Ccode] = @Ccode WHERE (([AdminID] = @Original_AdminID) AND ([Ccode] = @Original_Ccode));
SELECT AdminID, Ccode FROM [Enrolled by] WHERE (AdminID = @AdminID) AND (Ccode = @Ccode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AdminID" DataSetColumn="AdminID" />
              <Mapping SourceColumn="Ccode" DataSetColumn="Ccode" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EnrollsTableAdapter" GeneratorDataComponentClassName="EnrollsTableAdapter" Name="Enrolls" UserDataComponentName="EnrollsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.Enrolls" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Enrolls] WHERE (([AdminID] = @Original_AdminID) AND ([StudID] = @Original_StudID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Enrolls] ([AdminID], [StudID]) VALUES (@AdminID, @StudID);
SELECT AdminID, StudID FROM Enrolls WHERE (AdminID = @AdminID) AND (StudID = @StudID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AdminID, StudID FROM dbo.Enrolls</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Enrolls] SET [AdminID] = @AdminID, [StudID] = @StudID WHERE (([AdminID] = @Original_AdminID) AND ([StudID] = @Original_StudID));
SELECT AdminID, StudID FROM Enrolls WHERE (AdminID = @AdminID) AND (StudID = @StudID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AdminID" DataSetColumn="AdminID" />
              <Mapping SourceColumn="StudID" DataSetColumn="StudID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Enrolls inTableAdapter" GeneratorDataComponentClassName="Enrolls_inTableAdapter" Name="Enrolls in" UserDataComponentName="Enrolls inTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.[Enrolls in]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Enrolls in] WHERE (([StudID] = @Original_StudID) AND ([Ccode] = @Original_Ccode) AND ((@IsNull_TotalHours = 1 AND [TotalHours] IS NULL) OR ([TotalHours] = @Original_TotalHours)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TotalHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TotalHours" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_TotalHours" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="TotalHours" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Enrolls in] ([StudID], [Ccode], [TotalHours]) VALUES (@StudID, @Ccode, @TotalHours);
SELECT StudID, Ccode, TotalHours FROM [Enrolls in] WHERE (Ccode = @Ccode) AND (StudID = @StudID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@TotalHours" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="TotalHours" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudID, Ccode, TotalHours FROM dbo.[Enrolls in]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Enrolls in] SET [StudID] = @StudID, [Ccode] = @Ccode, [TotalHours] = @TotalHours WHERE (([StudID] = @Original_StudID) AND ([Ccode] = @Original_Ccode) AND ((@IsNull_TotalHours = 1 AND [TotalHours] IS NULL) OR ([TotalHours] = @Original_TotalHours)));
SELECT StudID, Ccode, TotalHours FROM [Enrolls in] WHERE (Ccode = @Ccode) AND (StudID = @StudID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@TotalHours" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="TotalHours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TotalHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TotalHours" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_TotalHours" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="TotalHours" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudID" DataSetColumn="StudID" />
              <Mapping SourceColumn="Ccode" DataSetColumn="Ccode" />
              <Mapping SourceColumn="TotalHours" DataSetColumn="TotalHours" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Phone_adminTableAdapter" GeneratorDataComponentClassName="Phone_adminTableAdapter" Name="Phone_admin" UserDataComponentName="Phone_adminTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.Phone_admin" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Phone_admin] WHERE (([Aphone] = @Original_Aphone) AND ([AdminID] = @Original_AdminID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Aphone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Aphone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Phone_admin] ([Aphone], [AdminID]) VALUES (@Aphone, @AdminID);
SELECT Aphone, AdminID FROM Phone_admin WHERE (Aphone = @Aphone)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Aphone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Aphone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Aphone, AdminID FROM dbo.Phone_admin</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Phone_admin] SET [Aphone] = @Aphone, [AdminID] = @AdminID WHERE (([Aphone] = @Original_Aphone) AND ([AdminID] = @Original_AdminID));
SELECT Aphone, AdminID FROM Phone_admin WHERE (Aphone = @Aphone)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Aphone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Aphone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Aphone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Aphone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_AdminID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="AdminID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Aphone" DataSetColumn="Aphone" />
              <Mapping SourceColumn="AdminID" DataSetColumn="AdminID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Phone_studTableAdapter" GeneratorDataComponentClassName="Phone_studTableAdapter" Name="Phone_stud" UserDataComponentName="Phone_studTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.Phone_stud" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Phone_stud] WHERE (([Sphone] = @Original_Sphone) AND ([StudID] = @Original_StudID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Sphone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sphone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Phone_stud] ([Sphone], [StudID]) VALUES (@Sphone, @StudID);
SELECT Sphone, StudID FROM Phone_stud WHERE (Sphone = @Sphone)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Sphone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sphone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Sphone, StudID FROM dbo.Phone_stud</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Phone_stud] SET [Sphone] = @Sphone, [StudID] = @StudID WHERE (([Sphone] = @Original_Sphone) AND ([StudID] = @Original_StudID));
SELECT Sphone, StudID FROM Phone_stud WHERE (Sphone = @Sphone)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Sphone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sphone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Sphone" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sphone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Sphone" DataSetColumn="Sphone" />
              <Mapping SourceColumn="StudID" DataSetColumn="StudID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RequiresTableAdapter" GeneratorDataComponentClassName="RequiresTableAdapter" Name="Requires" UserDataComponentName="RequiresTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.Requires" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Requires] WHERE (([Ccode] = @Original_Ccode) AND ([Cou_Ccode] = @Original_Cou_Ccode))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Cou_Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Cou_Ccode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Requires] ([Ccode], [Cou_Ccode]) VALUES (@Ccode, @Cou_Ccode);
SELECT Ccode, Cou_Ccode FROM Requires WHERE (Ccode = @Ccode) AND (Cou_Ccode = @Cou_Ccode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Cou_Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Cou_Ccode" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Ccode, Cou_Ccode FROM dbo.Requires</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Requires] SET [Ccode] = @Ccode, [Cou_Ccode] = @Cou_Ccode WHERE (([Ccode] = @Original_Ccode) AND ([Cou_Ccode] = @Original_Cou_Ccode));
SELECT Ccode, Cou_Ccode FROM Requires WHERE (Ccode = @Ccode) AND (Cou_Ccode = @Cou_Ccode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Cou_Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Cou_Ccode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Cou_Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Cou_Ccode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Ccode" DataSetColumn="Ccode" />
              <Mapping SourceColumn="Cou_Ccode" DataSetColumn="Cou_Ccode" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StaffTableAdapter" GeneratorDataComponentClassName="StaffTableAdapter" Name="Staff" UserDataComponentName="StaffTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.Staff" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Staff] WHERE (([StaffID] = @Original_StaffID) AND ([Fname] = @Original_Fname) AND ([Lname] = @Original_Lname) AND ([Email] = @Original_Email))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_StaffID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Fname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Fname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Lname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Lname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Staff] ([StaffID], [Fname], [Lname], [Email]) VALUES (@StaffID, @Fname, @Lname, @Email);
SELECT StaffID, Fname, Lname, Email FROM Staff WHERE (StaffID = @StaffID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@StaffID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Fname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Fname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Lname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Lname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StaffID, Fname, Lname, Email FROM dbo.Staff</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Staff] SET [StaffID] = @StaffID, [Fname] = @Fname, [Lname] = @Lname, [Email] = @Email WHERE (([StaffID] = @Original_StaffID) AND ([Fname] = @Original_Fname) AND ([Lname] = @Original_Lname) AND ([Email] = @Original_Email));
SELECT StaffID, Fname, Lname, Email FROM Staff WHERE (StaffID = @StaffID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@StaffID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Fname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Fname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Lname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Lname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_StaffID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Fname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Fname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Lname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Lname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StaffID" DataSetColumn="StaffID" />
              <Mapping SourceColumn="Fname" DataSetColumn="Fname" />
              <Mapping SourceColumn="Lname" DataSetColumn="Lname" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentTableAdapter" GeneratorDataComponentClassName="StudentTableAdapter" Name="Student" UserDataComponentName="StudentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.Student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Student] WHERE (([StudID] = @Original_StudID) AND ([DID] = @Original_DID) AND ([Fname] = @Original_Fname) AND ([Lname] = @Original_Lname) AND ([GPA] = @Original_GPA) AND ([Email] = @Original_Email) AND ([Street] = @Original_Street) AND ([City] = @Original_City) AND ([Gender] = @Original_Gender) AND ([EnrollmentYear] = @Original_EnrollmentYear))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_DID" Precision="10" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Fname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Fname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Lname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Lname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_GPA" Precision="3" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="GPA" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Street" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Street" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_City" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="City" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Gender" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Gender" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EnrollmentYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EnrollmentYear" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Student] ([StudID], [DID], [Fname], [Lname], [GPA], [Email], [Street], [City], [Gender], [EnrollmentYear]) VALUES (@StudID, @DID, @Fname, @Lname, @GPA, @Email, @Street, @City, @Gender, @EnrollmentYear);
SELECT StudID, DID, Fname, Lname, GPA, Email, Street, City, Gender, EnrollmentYear FROM Student WHERE (StudID = @StudID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@DID" Precision="10" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Fname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Fname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Lname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Lname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@GPA" Precision="3" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="GPA" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Street" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Street" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@City" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="City" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Gender" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Gender" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EnrollmentYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EnrollmentYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudID, DID, Fname, Lname, GPA, Email, Street, City, Gender, EnrollmentYear FROM dbo.Student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Student] SET [StudID] = @StudID, [DID] = @DID, [Fname] = @Fname, [Lname] = @Lname, [GPA] = @GPA, [Email] = @Email, [Street] = @Street, [City] = @City, [Gender] = @Gender, [EnrollmentYear] = @EnrollmentYear WHERE (([StudID] = @Original_StudID) AND ([DID] = @Original_DID) AND ([Fname] = @Original_Fname) AND ([Lname] = @Original_Lname) AND ([GPA] = @Original_GPA) AND ([Email] = @Original_Email) AND ([Street] = @Original_Street) AND ([City] = @Original_City) AND ([Gender] = @Original_Gender) AND ([EnrollmentYear] = @Original_EnrollmentYear));
SELECT StudID, DID, Fname, Lname, GPA, Email, Street, City, Gender, EnrollmentYear FROM Student WHERE (StudID = @StudID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@DID" Precision="10" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Fname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Fname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Lname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Lname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@GPA" Precision="3" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="GPA" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Street" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Street" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@City" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="City" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Gender" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Gender" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EnrollmentYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EnrollmentYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_StudID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StudID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_DID" Precision="10" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Fname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Fname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Lname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Lname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_GPA" Precision="3" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="GPA" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Street" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Street" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_City" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="City" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Gender" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Gender" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EnrollmentYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EnrollmentYear" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudID" DataSetColumn="StudID" />
              <Mapping SourceColumn="DID" DataSetColumn="DID" />
              <Mapping SourceColumn="Fname" DataSetColumn="Fname" />
              <Mapping SourceColumn="Lname" DataSetColumn="Lname" />
              <Mapping SourceColumn="GPA" DataSetColumn="GPA" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
              <Mapping SourceColumn="Street" DataSetColumn="Street" />
              <Mapping SourceColumn="City" DataSetColumn="City" />
              <Mapping SourceColumn="Gender" DataSetColumn="Gender" />
              <Mapping SourceColumn="EnrollmentYear" DataSetColumn="EnrollmentYear" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.Student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudID, DID, Fname, Lname, GPA, Email, Street, City, Gender, EnrollmentYear
FROM     Student
WHERE  (DID = @DID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="DID" ColumnName="DID" DataSourceName="dbprojectt.dbo.Student" DataTypeServer="numeric(10, 0)" DbType="Decimal" Direction="Input" ParameterName="@DID" Precision="10" ProviderType="Decimal" Scale="0" Size="9" SourceColumn="DID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.Student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy1" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy1" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillBy1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudID, DID, Fname, Lname, GPA, Email, Street, City, Gender, EnrollmentYear
FROM     Student
ORDER BY GPA</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.Student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy2" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy2" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="FillBy2">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudID, DID, Fname, Lname, GPA, Email, Street, City, Gender, EnrollmentYear
FROM     Student
WHERE  (EnrollmentYear = @EnrollmentYear)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="EnrollmentYear" ColumnName="EnrollmentYear" DataSourceName="dbprojectt.dbo.Student" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@EnrollmentYear" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="EnrollmentYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeachesTableAdapter" GeneratorDataComponentClassName="TeachesTableAdapter" Name="Teaches" UserDataComponentName="TeachesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbprojecttConnectionString (Settings)" DbObjectName="dbprojectt.dbo.Teaches" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Teaches] WHERE (([StaffID] = @Original_StaffID) AND ([Ccode] = @Original_Ccode))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_StaffID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Teaches] ([StaffID], [Ccode]) VALUES (@StaffID, @Ccode);
SELECT StaffID, Ccode FROM Teaches WHERE (Ccode = @Ccode) AND (StaffID = @StaffID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@StaffID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StaffID, Ccode FROM dbo.Teaches</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Teaches] SET [StaffID] = @StaffID, [Ccode] = @Ccode WHERE (([StaffID] = @Original_StaffID) AND ([Ccode] = @Original_Ccode));
SELECT StaffID, Ccode FROM Teaches WHERE (Ccode = @Ccode) AND (StaffID = @StaffID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@StaffID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_StaffID" Precision="5" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="StaffID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Ccode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Ccode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StaffID" DataSetColumn="StaffID" />
              <Mapping SourceColumn="Ccode" DataSetColumn="Ccode" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="dbprojecttDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="dbprojecttDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="dbprojecttDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Admin" msprop:Generator_RowClassName="AdminRow" msprop:Generator_RowEvHandlerName="AdminRowChangeEventHandler" msprop:Generator_RowDeletedName="AdminRowDeleted" msprop:Generator_RowDeletingName="AdminRowDeleting" msprop:Generator_RowEvArgName="AdminRowChangeEvent" msprop:Generator_TablePropName="Admin" msprop:Generator_RowChangedName="AdminRowChanged" msprop:Generator_UserTableName="Admin" msprop:Generator_RowChangingName="AdminRowChanging" msprop:Generator_TableClassName="AdminDataTable" msprop:Generator_TableVarName="tableAdmin">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AdminID" msprop:Generator_UserColumnName="AdminID" msprop:Generator_ColumnPropNameInTable="AdminIDColumn" msprop:Generator_ColumnPropNameInRow="AdminID" msprop:Generator_ColumnVarNameInTable="columnAdminID" type="xs:decimal" />
              <xs:element name="Fname" msprop:Generator_UserColumnName="Fname" msprop:Generator_ColumnPropNameInTable="FnameColumn" msprop:Generator_ColumnPropNameInRow="Fname" msprop:Generator_ColumnVarNameInTable="columnFname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Lname" msprop:Generator_UserColumnName="Lname" msprop:Generator_ColumnPropNameInTable="LnameColumn" msprop:Generator_ColumnPropNameInRow="Lname" msprop:Generator_ColumnVarNameInTable="columnLname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GPA" msprop:Generator_UserColumnName="GPA" msprop:Generator_ColumnPropNameInTable="GPAColumn" msprop:Generator_ColumnPropNameInRow="GPA" msprop:Generator_ColumnVarNameInTable="columnGPA" type="xs:decimal" />
              <xs:element name="Street" msprop:Generator_UserColumnName="Street" msprop:Generator_ColumnPropNameInTable="StreetColumn" msprop:Generator_ColumnPropNameInRow="Street" msprop:Generator_ColumnVarNameInTable="columnStreet">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Assigned_x0020_by" msprop:Generator_RowClassName="Assigned_byRow" msprop:Generator_RowEvHandlerName="Assigned_byRowChangeEventHandler" msprop:Generator_RowDeletedName="Assigned_byRowDeleted" msprop:Generator_RowDeletingName="Assigned_byRowDeleting" msprop:Generator_RowEvArgName="Assigned_byRowChangeEvent" msprop:Generator_TablePropName="Assigned_by" msprop:Generator_RowChangedName="Assigned_byRowChanged" msprop:Generator_UserTableName="Assigned by" msprop:Generator_RowChangingName="Assigned_byRowChanging" msprop:Generator_TableClassName="Assigned_byDataTable" msprop:Generator_TableVarName="tableAssigned_by">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AdminID" msprop:Generator_UserColumnName="AdminID" msprop:Generator_ColumnPropNameInTable="AdminIDColumn" msprop:Generator_ColumnPropNameInRow="AdminID" msprop:Generator_ColumnVarNameInTable="columnAdminID" type="xs:decimal" />
              <xs:element name="DID" msprop:Generator_UserColumnName="DID" msprop:Generator_ColumnPropNameInTable="DIDColumn" msprop:Generator_ColumnPropNameInRow="DID" msprop:Generator_ColumnVarNameInTable="columnDID" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Assigns" msprop:Generator_RowClassName="AssignsRow" msprop:Generator_RowEvHandlerName="AssignsRowChangeEventHandler" msprop:Generator_RowDeletedName="AssignsRowDeleted" msprop:Generator_RowDeletingName="AssignsRowDeleting" msprop:Generator_RowEvArgName="AssignsRowChangeEvent" msprop:Generator_TablePropName="Assigns" msprop:Generator_RowChangedName="AssignsRowChanged" msprop:Generator_UserTableName="Assigns" msprop:Generator_RowChangingName="AssignsRowChanging" msprop:Generator_TableClassName="AssignsDataTable" msprop:Generator_TableVarName="tableAssigns">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AdminID" msprop:Generator_UserColumnName="AdminID" msprop:Generator_ColumnPropNameInTable="AdminIDColumn" msprop:Generator_ColumnPropNameInRow="AdminID" msprop:Generator_ColumnVarNameInTable="columnAdminID" type="xs:decimal" />
              <xs:element name="StudID" msprop:Generator_UserColumnName="StudID" msprop:Generator_ColumnPropNameInTable="StudIDColumn" msprop:Generator_ColumnPropNameInRow="StudID" msprop:Generator_ColumnVarNameInTable="columnStudID" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Course" msprop:Generator_RowClassName="CourseRow" msprop:Generator_RowEvHandlerName="CourseRowChangeEventHandler" msprop:Generator_RowDeletedName="CourseRowDeleted" msprop:Generator_RowDeletingName="CourseRowDeleting" msprop:Generator_RowEvArgName="CourseRowChangeEvent" msprop:Generator_TablePropName="Course" msprop:Generator_RowChangedName="CourseRowChanged" msprop:Generator_UserTableName="Course" msprop:Generator_RowChangingName="CourseRowChanging" msprop:Generator_TableClassName="CourseDataTable" msprop:Generator_TableVarName="tableCourse">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Ccode" msprop:Generator_UserColumnName="Ccode" msprop:Generator_ColumnPropNameInTable="CcodeColumn" msprop:Generator_ColumnPropNameInRow="Ccode" msprop:Generator_ColumnVarNameInTable="columnCcode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DID" msprop:Generator_UserColumnName="DID" msprop:Generator_ColumnPropNameInTable="DIDColumn" msprop:Generator_ColumnPropNameInRow="DID" msprop:Generator_ColumnVarNameInTable="columnDID" type="xs:decimal" />
              <xs:element name="Type" msprop:Generator_UserColumnName="Type" msprop:Generator_ColumnPropNameInTable="TypeColumn" msprop:Generator_ColumnPropNameInRow="Type" msprop:Generator_ColumnVarNameInTable="columnType">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CreditHours" msprop:Generator_UserColumnName="CreditHours" msprop:Generator_ColumnPropNameInTable="CreditHoursColumn" msprop:Generator_ColumnPropNameInRow="CreditHours" msprop:Generator_ColumnVarNameInTable="columnCreditHours" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Creates" msprop:Generator_RowClassName="CreatesRow" msprop:Generator_RowEvHandlerName="CreatesRowChangeEventHandler" msprop:Generator_RowDeletedName="CreatesRowDeleted" msprop:Generator_RowDeletingName="CreatesRowDeleting" msprop:Generator_RowEvArgName="CreatesRowChangeEvent" msprop:Generator_TablePropName="Creates" msprop:Generator_RowChangedName="CreatesRowChanged" msprop:Generator_UserTableName="Creates" msprop:Generator_RowChangingName="CreatesRowChanging" msprop:Generator_TableClassName="CreatesDataTable" msprop:Generator_TableVarName="tableCreates">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AdminID" msprop:Generator_UserColumnName="AdminID" msprop:Generator_ColumnPropNameInTable="AdminIDColumn" msprop:Generator_ColumnPropNameInRow="AdminID" msprop:Generator_ColumnVarNameInTable="columnAdminID" type="xs:decimal" />
              <xs:element name="Ccode" msprop:Generator_UserColumnName="Ccode" msprop:Generator_ColumnPropNameInTable="CcodeColumn" msprop:Generator_ColumnPropNameInRow="Ccode" msprop:Generator_ColumnVarNameInTable="columnCcode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Department" msprop:Generator_RowClassName="DepartmentRow" msprop:Generator_RowEvHandlerName="DepartmentRowChangeEventHandler" msprop:Generator_RowDeletedName="DepartmentRowDeleted" msprop:Generator_RowDeletingName="DepartmentRowDeleting" msprop:Generator_RowEvArgName="DepartmentRowChangeEvent" msprop:Generator_TablePropName="Department" msprop:Generator_RowChangedName="DepartmentRowChanged" msprop:Generator_UserTableName="Department" msprop:Generator_RowChangingName="DepartmentRowChanging" msprop:Generator_TableClassName="DepartmentDataTable" msprop:Generator_TableVarName="tableDepartment">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_UserColumnName="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnVarNameInTable="columnName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DID" msprop:Generator_UserColumnName="DID" msprop:Generator_ColumnPropNameInTable="DIDColumn" msprop:Generator_ColumnPropNameInRow="DID" msprop:Generator_ColumnVarNameInTable="columnDID" type="xs:decimal" />
              <xs:element name="AdminID" msprop:Generator_UserColumnName="AdminID" msprop:Generator_ColumnPropNameInTable="AdminIDColumn" msprop:Generator_ColumnPropNameInRow="AdminID" msprop:Generator_ColumnVarNameInTable="columnAdminID" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Dependents" msprop:Generator_RowClassName="DependentsRow" msprop:Generator_RowEvHandlerName="DependentsRowChangeEventHandler" msprop:Generator_RowDeletedName="DependentsRowDeleted" msprop:Generator_RowDeletingName="DependentsRowDeleting" msprop:Generator_RowEvArgName="DependentsRowChangeEvent" msprop:Generator_TablePropName="Dependents" msprop:Generator_RowChangedName="DependentsRowChanged" msprop:Generator_UserTableName="Dependents" msprop:Generator_RowChangingName="DependentsRowChanging" msprop:Generator_TableClassName="DependentsDataTable" msprop:Generator_TableVarName="tableDependents">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_UserColumnName="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnVarNameInTable="columnName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Relation" msprop:Generator_UserColumnName="Relation" msprop:Generator_ColumnPropNameInTable="RelationColumn" msprop:Generator_ColumnPropNameInRow="Relation" msprop:Generator_ColumnVarNameInTable="columnRelation">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Dnum" msprop:Generator_UserColumnName="Dnum" msprop:Generator_ColumnPropNameInTable="DnumColumn" msprop:Generator_ColumnPropNameInRow="Dnum" msprop:Generator_ColumnVarNameInTable="columnDnum" type="xs:decimal" />
              <xs:element name="StaffID" msprop:Generator_UserColumnName="StaffID" msprop:Generator_ColumnPropNameInTable="StaffIDColumn" msprop:Generator_ColumnPropNameInRow="StaffID" msprop:Generator_ColumnVarNameInTable="columnStaffID" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Enrolled_x0020_by" msprop:Generator_RowClassName="Enrolled_byRow" msprop:Generator_RowEvHandlerName="Enrolled_byRowChangeEventHandler" msprop:Generator_RowDeletedName="Enrolled_byRowDeleted" msprop:Generator_RowDeletingName="Enrolled_byRowDeleting" msprop:Generator_RowEvArgName="Enrolled_byRowChangeEvent" msprop:Generator_TablePropName="Enrolled_by" msprop:Generator_RowChangedName="Enrolled_byRowChanged" msprop:Generator_UserTableName="Enrolled by" msprop:Generator_RowChangingName="Enrolled_byRowChanging" msprop:Generator_TableClassName="Enrolled_byDataTable" msprop:Generator_TableVarName="tableEnrolled_by">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AdminID" msprop:Generator_UserColumnName="AdminID" msprop:Generator_ColumnPropNameInTable="AdminIDColumn" msprop:Generator_ColumnPropNameInRow="AdminID" msprop:Generator_ColumnVarNameInTable="columnAdminID" type="xs:decimal" />
              <xs:element name="Ccode" msprop:Generator_UserColumnName="Ccode" msprop:Generator_ColumnPropNameInTable="CcodeColumn" msprop:Generator_ColumnPropNameInRow="Ccode" msprop:Generator_ColumnVarNameInTable="columnCcode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Enrolls" msprop:Generator_RowClassName="EnrollsRow" msprop:Generator_RowEvHandlerName="EnrollsRowChangeEventHandler" msprop:Generator_RowDeletedName="EnrollsRowDeleted" msprop:Generator_RowDeletingName="EnrollsRowDeleting" msprop:Generator_RowEvArgName="EnrollsRowChangeEvent" msprop:Generator_TablePropName="Enrolls" msprop:Generator_RowChangedName="EnrollsRowChanged" msprop:Generator_UserTableName="Enrolls" msprop:Generator_RowChangingName="EnrollsRowChanging" msprop:Generator_TableClassName="EnrollsDataTable" msprop:Generator_TableVarName="tableEnrolls">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AdminID" msprop:Generator_UserColumnName="AdminID" msprop:Generator_ColumnPropNameInTable="AdminIDColumn" msprop:Generator_ColumnPropNameInRow="AdminID" msprop:Generator_ColumnVarNameInTable="columnAdminID" type="xs:decimal" />
              <xs:element name="StudID" msprop:Generator_UserColumnName="StudID" msprop:Generator_ColumnPropNameInTable="StudIDColumn" msprop:Generator_ColumnPropNameInRow="StudID" msprop:Generator_ColumnVarNameInTable="columnStudID" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Enrolls_x0020_in" msprop:Generator_RowClassName="Enrolls_inRow" msprop:Generator_RowEvHandlerName="Enrolls_inRowChangeEventHandler" msprop:Generator_RowDeletedName="Enrolls_inRowDeleted" msprop:Generator_RowDeletingName="Enrolls_inRowDeleting" msprop:Generator_RowEvArgName="Enrolls_inRowChangeEvent" msprop:Generator_TablePropName="Enrolls_in" msprop:Generator_RowChangedName="Enrolls_inRowChanged" msprop:Generator_UserTableName="Enrolls in" msprop:Generator_RowChangingName="Enrolls_inRowChanging" msprop:Generator_TableClassName="Enrolls_inDataTable" msprop:Generator_TableVarName="tableEnrolls_in">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudID" msprop:Generator_UserColumnName="StudID" msprop:Generator_ColumnPropNameInTable="StudIDColumn" msprop:Generator_ColumnPropNameInRow="StudID" msprop:Generator_ColumnVarNameInTable="columnStudID" type="xs:decimal" />
              <xs:element name="Ccode" msprop:Generator_UserColumnName="Ccode" msprop:Generator_ColumnPropNameInTable="CcodeColumn" msprop:Generator_ColumnPropNameInRow="Ccode" msprop:Generator_ColumnVarNameInTable="columnCcode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TotalHours" msprop:Generator_UserColumnName="TotalHours" msprop:Generator_ColumnPropNameInTable="TotalHoursColumn" msprop:Generator_ColumnPropNameInRow="TotalHours" msprop:Generator_ColumnVarNameInTable="columnTotalHours" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Phone_admin" msprop:Generator_RowClassName="Phone_adminRow" msprop:Generator_RowEvHandlerName="Phone_adminRowChangeEventHandler" msprop:Generator_RowDeletedName="Phone_adminRowDeleted" msprop:Generator_RowDeletingName="Phone_adminRowDeleting" msprop:Generator_RowEvArgName="Phone_adminRowChangeEvent" msprop:Generator_TablePropName="Phone_admin" msprop:Generator_RowChangedName="Phone_adminRowChanged" msprop:Generator_UserTableName="Phone_admin" msprop:Generator_RowChangingName="Phone_adminRowChanging" msprop:Generator_TableClassName="Phone_adminDataTable" msprop:Generator_TableVarName="tablePhone_admin">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Aphone" msprop:Generator_UserColumnName="Aphone" msprop:Generator_ColumnPropNameInTable="AphoneColumn" msprop:Generator_ColumnPropNameInRow="Aphone" msprop:Generator_ColumnVarNameInTable="columnAphone" type="xs:int" />
              <xs:element name="AdminID" msprop:Generator_UserColumnName="AdminID" msprop:Generator_ColumnPropNameInTable="AdminIDColumn" msprop:Generator_ColumnPropNameInRow="AdminID" msprop:Generator_ColumnVarNameInTable="columnAdminID" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Phone_stud" msprop:Generator_RowClassName="Phone_studRow" msprop:Generator_RowEvHandlerName="Phone_studRowChangeEventHandler" msprop:Generator_RowDeletedName="Phone_studRowDeleted" msprop:Generator_RowDeletingName="Phone_studRowDeleting" msprop:Generator_RowEvArgName="Phone_studRowChangeEvent" msprop:Generator_TablePropName="Phone_stud" msprop:Generator_RowChangedName="Phone_studRowChanged" msprop:Generator_UserTableName="Phone_stud" msprop:Generator_RowChangingName="Phone_studRowChanging" msprop:Generator_TableClassName="Phone_studDataTable" msprop:Generator_TableVarName="tablePhone_stud">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Sphone" msprop:Generator_UserColumnName="Sphone" msprop:Generator_ColumnPropNameInTable="SphoneColumn" msprop:Generator_ColumnPropNameInRow="Sphone" msprop:Generator_ColumnVarNameInTable="columnSphone" type="xs:int" />
              <xs:element name="StudID" msprop:Generator_UserColumnName="StudID" msprop:Generator_ColumnPropNameInTable="StudIDColumn" msprop:Generator_ColumnPropNameInRow="StudID" msprop:Generator_ColumnVarNameInTable="columnStudID" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Requires" msprop:Generator_RowClassName="RequiresRow" msprop:Generator_RowEvHandlerName="RequiresRowChangeEventHandler" msprop:Generator_RowDeletedName="RequiresRowDeleted" msprop:Generator_RowDeletingName="RequiresRowDeleting" msprop:Generator_RowEvArgName="RequiresRowChangeEvent" msprop:Generator_TablePropName="Requires" msprop:Generator_RowChangedName="RequiresRowChanged" msprop:Generator_UserTableName="Requires" msprop:Generator_RowChangingName="RequiresRowChanging" msprop:Generator_TableClassName="RequiresDataTable" msprop:Generator_TableVarName="tableRequires">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Ccode" msprop:Generator_UserColumnName="Ccode" msprop:Generator_ColumnPropNameInTable="CcodeColumn" msprop:Generator_ColumnPropNameInRow="Ccode" msprop:Generator_ColumnVarNameInTable="columnCcode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Cou_Ccode" msprop:Generator_UserColumnName="Cou_Ccode" msprop:Generator_ColumnPropNameInTable="Cou_CcodeColumn" msprop:Generator_ColumnPropNameInRow="Cou_Ccode" msprop:Generator_ColumnVarNameInTable="columnCou_Ccode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Staff" msprop:Generator_RowClassName="StaffRow" msprop:Generator_RowEvHandlerName="StaffRowChangeEventHandler" msprop:Generator_RowDeletedName="StaffRowDeleted" msprop:Generator_RowDeletingName="StaffRowDeleting" msprop:Generator_RowEvArgName="StaffRowChangeEvent" msprop:Generator_TablePropName="Staff" msprop:Generator_RowChangedName="StaffRowChanged" msprop:Generator_UserTableName="Staff" msprop:Generator_RowChangingName="StaffRowChanging" msprop:Generator_TableClassName="StaffDataTable" msprop:Generator_TableVarName="tableStaff">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StaffID" msprop:Generator_UserColumnName="StaffID" msprop:Generator_ColumnPropNameInTable="StaffIDColumn" msprop:Generator_ColumnPropNameInRow="StaffID" msprop:Generator_ColumnVarNameInTable="columnStaffID" type="xs:decimal" />
              <xs:element name="Fname" msprop:Generator_UserColumnName="Fname" msprop:Generator_ColumnPropNameInTable="FnameColumn" msprop:Generator_ColumnPropNameInRow="Fname" msprop:Generator_ColumnVarNameInTable="columnFname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Lname" msprop:Generator_UserColumnName="Lname" msprop:Generator_ColumnPropNameInTable="LnameColumn" msprop:Generator_ColumnPropNameInRow="Lname" msprop:Generator_ColumnVarNameInTable="columnLname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Email" msprop:Generator_UserColumnName="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_ColumnVarNameInTable="columnEmail">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Student" msprop:Generator_RowClassName="StudentRow" msprop:Generator_RowEvHandlerName="StudentRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentRowDeleted" msprop:Generator_RowDeletingName="StudentRowDeleting" msprop:Generator_RowEvArgName="StudentRowChangeEvent" msprop:Generator_TablePropName="Student" msprop:Generator_RowChangedName="StudentRowChanged" msprop:Generator_UserTableName="Student" msprop:Generator_RowChangingName="StudentRowChanging" msprop:Generator_TableClassName="StudentDataTable" msprop:Generator_TableVarName="tableStudent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudID" msprop:Generator_UserColumnName="StudID" msprop:Generator_ColumnPropNameInTable="StudIDColumn" msprop:Generator_ColumnPropNameInRow="StudID" msprop:Generator_ColumnVarNameInTable="columnStudID" type="xs:decimal" />
              <xs:element name="DID" msprop:Generator_UserColumnName="DID" msprop:Generator_ColumnPropNameInTable="DIDColumn" msprop:Generator_ColumnPropNameInRow="DID" msprop:Generator_ColumnVarNameInTable="columnDID" type="xs:decimal" />
              <xs:element name="Fname" msprop:Generator_UserColumnName="Fname" msprop:Generator_ColumnPropNameInTable="FnameColumn" msprop:Generator_ColumnPropNameInRow="Fname" msprop:Generator_ColumnVarNameInTable="columnFname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Lname" msprop:Generator_UserColumnName="Lname" msprop:Generator_ColumnPropNameInTable="LnameColumn" msprop:Generator_ColumnPropNameInRow="Lname" msprop:Generator_ColumnVarNameInTable="columnLname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GPA" msprop:Generator_UserColumnName="GPA" msprop:Generator_ColumnPropNameInTable="GPAColumn" msprop:Generator_ColumnPropNameInRow="GPA" msprop:Generator_ColumnVarNameInTable="columnGPA" type="xs:decimal" />
              <xs:element name="Email" msprop:Generator_UserColumnName="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_ColumnVarNameInTable="columnEmail">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Street" msprop:Generator_UserColumnName="Street" msprop:Generator_ColumnPropNameInTable="StreetColumn" msprop:Generator_ColumnPropNameInRow="Street" msprop:Generator_ColumnVarNameInTable="columnStreet">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="City" msprop:Generator_UserColumnName="City" msprop:Generator_ColumnPropNameInTable="CityColumn" msprop:Generator_ColumnPropNameInRow="City" msprop:Generator_ColumnVarNameInTable="columnCity">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Gender" msprop:Generator_UserColumnName="Gender" msprop:Generator_ColumnPropNameInTable="GenderColumn" msprop:Generator_ColumnPropNameInRow="Gender" msprop:Generator_ColumnVarNameInTable="columnGender">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EnrollmentYear" msprop:Generator_UserColumnName="EnrollmentYear" msprop:Generator_ColumnPropNameInTable="EnrollmentYearColumn" msprop:Generator_ColumnPropNameInRow="EnrollmentYear" msprop:Generator_ColumnVarNameInTable="columnEnrollmentYear" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Teaches" msprop:Generator_RowClassName="TeachesRow" msprop:Generator_RowEvHandlerName="TeachesRowChangeEventHandler" msprop:Generator_RowDeletedName="TeachesRowDeleted" msprop:Generator_RowDeletingName="TeachesRowDeleting" msprop:Generator_RowEvArgName="TeachesRowChangeEvent" msprop:Generator_TablePropName="Teaches" msprop:Generator_RowChangedName="TeachesRowChanged" msprop:Generator_UserTableName="Teaches" msprop:Generator_RowChangingName="TeachesRowChanging" msprop:Generator_TableClassName="TeachesDataTable" msprop:Generator_TableVarName="tableTeaches">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StaffID" msprop:Generator_UserColumnName="StaffID" msprop:Generator_ColumnPropNameInTable="StaffIDColumn" msprop:Generator_ColumnPropNameInRow="StaffID" msprop:Generator_ColumnVarNameInTable="columnStaffID" type="xs:decimal" />
              <xs:element name="Ccode" msprop:Generator_UserColumnName="Ccode" msprop:Generator_ColumnPropNameInTable="CcodeColumn" msprop:Generator_ColumnPropNameInRow="Ccode" msprop:Generator_ColumnVarNameInTable="columnCcode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Admin" />
      <xs:field xpath="mstns:AdminID" />
    </xs:unique>
    <xs:unique name="Assigned_x0020_by_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Assigned_x0020_by" />
      <xs:field xpath="mstns:AdminID" />
      <xs:field xpath="mstns:DID" />
    </xs:unique>
    <xs:unique name="Assigns_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Assigns" />
      <xs:field xpath="mstns:AdminID" />
      <xs:field xpath="mstns:StudID" />
    </xs:unique>
    <xs:unique name="Course_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Course" />
      <xs:field xpath="mstns:Ccode" />
    </xs:unique>
    <xs:unique name="Creates_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Creates" />
      <xs:field xpath="mstns:AdminID" />
      <xs:field xpath="mstns:Ccode" />
    </xs:unique>
    <xs:unique name="Department_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Department" />
      <xs:field xpath="mstns:DID" />
    </xs:unique>
    <xs:unique name="Dependents_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Dependents" />
      <xs:field xpath="mstns:Dnum" />
    </xs:unique>
    <xs:unique name="Enrolled_x0020_by_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Enrolled_x0020_by" />
      <xs:field xpath="mstns:AdminID" />
      <xs:field xpath="mstns:Ccode" />
    </xs:unique>
    <xs:unique name="Enrolls_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Enrolls" />
      <xs:field xpath="mstns:AdminID" />
      <xs:field xpath="mstns:StudID" />
    </xs:unique>
    <xs:unique name="Enrolls_x0020_in_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Enrolls_x0020_in" />
      <xs:field xpath="mstns:StudID" />
      <xs:field xpath="mstns:Ccode" />
    </xs:unique>
    <xs:unique name="Phone_admin_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Phone_admin" />
      <xs:field xpath="mstns:Aphone" />
    </xs:unique>
    <xs:unique name="Phone_stud_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Phone_stud" />
      <xs:field xpath="mstns:Sphone" />
    </xs:unique>
    <xs:unique name="Requires_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Requires" />
      <xs:field xpath="mstns:Ccode" />
      <xs:field xpath="mstns:Cou_Ccode" />
    </xs:unique>
    <xs:unique name="Staff_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Staff" />
      <xs:field xpath="mstns:StaffID" />
    </xs:unique>
    <xs:unique name="Student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Student" />
      <xs:field xpath="mstns:StudID" />
    </xs:unique>
    <xs:unique name="Teaches_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Teaches" />
      <xs:field xpath="mstns:StaffID" />
      <xs:field xpath="mstns:Ccode" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_ASSIGNED_BY_ADMIN" msdata:parent="Admin" msdata:child="Assigned_x0020_by" msdata:parentkey="AdminID" msdata:childkey="AdminID" msprop:Generator_UserParentTable="Admin" msprop:Generator_UserChildTable="Assigned by" msprop:Generator_RelationVarName="relationFK_ASSIGNED_BY_ADMIN" msprop:Generator_ChildPropName="GetAssigned_byRows" msprop:Generator_UserRelationName="FK_ASSIGNED_BY_ADMIN" msprop:Generator_ParentPropName="AdminRow" />
      <msdata:Relationship name="FK_ASSIGNED_BY_DEPARTMENT" msdata:parent="Department" msdata:child="Assigned_x0020_by" msdata:parentkey="DID" msdata:childkey="DID" msprop:Generator_UserParentTable="Department" msprop:Generator_UserChildTable="Assigned by" msprop:Generator_RelationVarName="relationFK_ASSIGNED_BY_DEPARTMENT" msprop:Generator_ChildPropName="GetAssigned_byRows" msprop:Generator_ParentPropName="DepartmentRow" msprop:Generator_UserRelationName="FK_ASSIGNED_BY_DEPARTMENT" />
      <msdata:Relationship name="FK_ASSIGNS_ADMIN" msdata:parent="Admin" msdata:child="Assigns" msdata:parentkey="AdminID" msdata:childkey="AdminID" msprop:Generator_UserParentTable="Admin" msprop:Generator_UserChildTable="Assigns" msprop:Generator_RelationVarName="relationFK_ASSIGNS_ADMIN" msprop:Generator_ChildPropName="GetAssignsRows" msprop:Generator_UserRelationName="FK_ASSIGNS_ADMIN" msprop:Generator_ParentPropName="AdminRow" />
      <msdata:Relationship name="FK_ASSIGNS_STUDENT" msdata:parent="Student" msdata:child="Assigns" msdata:parentkey="StudID" msdata:childkey="StudID" msprop:Generator_UserParentTable="Student" msprop:Generator_UserChildTable="Assigns" msprop:Generator_RelationVarName="relationFK_ASSIGNS_STUDENT" msprop:Generator_ChildPropName="GetAssignsRows" msprop:Generator_ParentPropName="StudentRow" msprop:Generator_UserRelationName="FK_ASSIGNS_STUDENT" />
      <msdata:Relationship name="FK_COURSE_DEPARTMENT" msdata:parent="Department" msdata:child="Course" msdata:parentkey="DID" msdata:childkey="DID" msprop:Generator_UserParentTable="Department" msprop:Generator_UserChildTable="Course" msprop:Generator_RelationVarName="relationFK_COURSE_DEPARTMENT" msprop:Generator_ChildPropName="GetCourseRows" msprop:Generator_ParentPropName="DepartmentRow" msprop:Generator_UserRelationName="FK_COURSE_DEPARTMENT" />
      <msdata:Relationship name="FK_CREATES_ADMIN" msdata:parent="Admin" msdata:child="Creates" msdata:parentkey="AdminID" msdata:childkey="AdminID" msprop:Generator_UserParentTable="Admin" msprop:Generator_UserChildTable="Creates" msprop:Generator_RelationVarName="relationFK_CREATES_ADMIN" msprop:Generator_ChildPropName="GetCreatesRows" msprop:Generator_UserRelationName="FK_CREATES_ADMIN" msprop:Generator_ParentPropName="AdminRow" />
      <msdata:Relationship name="FK_CREATES_COURSE" msdata:parent="Course" msdata:child="Creates" msdata:parentkey="Ccode" msdata:childkey="Ccode" msprop:Generator_UserParentTable="Course" msprop:Generator_UserChildTable="Creates" msprop:Generator_RelationVarName="relationFK_CREATES_COURSE" msprop:Generator_ChildPropName="GetCreatesRows" msprop:Generator_UserRelationName="FK_CREATES_COURSE" msprop:Generator_ParentPropName="CourseRow" />
      <msdata:Relationship name="FK_DEPARTMENT_ADMIN" msdata:parent="Admin" msdata:child="Department" msdata:parentkey="AdminID" msdata:childkey="AdminID" msprop:Generator_UserParentTable="Admin" msprop:Generator_UserChildTable="Department" msprop:Generator_RelationVarName="relationFK_DEPARTMENT_ADMIN" msprop:Generator_ChildPropName="GetDepartmentRows" msprop:Generator_UserRelationName="FK_DEPARTMENT_ADMIN" msprop:Generator_ParentPropName="AdminRow" />
      <msdata:Relationship name="FK_DEPENDENTS_STAFF" msdata:parent="Staff" msdata:child="Dependents" msdata:parentkey="StaffID" msdata:childkey="StaffID" msprop:Generator_UserParentTable="Staff" msprop:Generator_UserChildTable="Dependents" msprop:Generator_RelationVarName="relationFK_DEPENDENTS_STAFF" msprop:Generator_ChildPropName="GetDependentsRows" msprop:Generator_ParentPropName="StaffRow" msprop:Generator_UserRelationName="FK_DEPENDENTS_STAFF" />
      <msdata:Relationship name="FK_ENROLLED_BY_ADMIN" msdata:parent="Admin" msdata:child="Enrolled_x0020_by" msdata:parentkey="AdminID" msdata:childkey="AdminID" msprop:Generator_UserParentTable="Admin" msprop:Generator_UserChildTable="Enrolled by" msprop:Generator_RelationVarName="relationFK_ENROLLED_BY_ADMIN" msprop:Generator_ChildPropName="GetEnrolled_byRows" msprop:Generator_UserRelationName="FK_ENROLLED_BY_ADMIN" msprop:Generator_ParentPropName="AdminRow" />
      <msdata:Relationship name="FK_ENROLLED_BY_COURSE" msdata:parent="Course" msdata:child="Enrolled_x0020_by" msdata:parentkey="Ccode" msdata:childkey="Ccode" msprop:Generator_UserParentTable="Course" msprop:Generator_UserChildTable="Enrolled by" msprop:Generator_RelationVarName="relationFK_ENROLLED_BY_COURSE" msprop:Generator_ChildPropName="GetEnrolled_byRows" msprop:Generator_UserRelationName="FK_ENROLLED_BY_COURSE" msprop:Generator_ParentPropName="CourseRow" />
      <msdata:Relationship name="FK_ENROLLS_ADMIN" msdata:parent="Admin" msdata:child="Enrolls" msdata:parentkey="AdminID" msdata:childkey="AdminID" msprop:Generator_UserParentTable="Admin" msprop:Generator_UserChildTable="Enrolls" msprop:Generator_RelationVarName="relationFK_ENROLLS_ADMIN" msprop:Generator_ChildPropName="GetEnrollsRows" msprop:Generator_UserRelationName="FK_ENROLLS_ADMIN" msprop:Generator_ParentPropName="AdminRow" />
      <msdata:Relationship name="FK_ENROLLS_STUDENT" msdata:parent="Student" msdata:child="Enrolls" msdata:parentkey="StudID" msdata:childkey="StudID" msprop:Generator_UserParentTable="Student" msprop:Generator_UserChildTable="Enrolls" msprop:Generator_RelationVarName="relationFK_ENROLLS_STUDENT" msprop:Generator_ChildPropName="GetEnrollsRows" msprop:Generator_ParentPropName="StudentRow" msprop:Generator_UserRelationName="FK_ENROLLS_STUDENT" />
      <msdata:Relationship name="FK_ENROLLS_IN_COURSE" msdata:parent="Course" msdata:child="Enrolls_x0020_in" msdata:parentkey="Ccode" msdata:childkey="Ccode" msprop:Generator_UserParentTable="Course" msprop:Generator_UserChildTable="Enrolls in" msprop:Generator_RelationVarName="relationFK_ENROLLS_IN_COURSE" msprop:Generator_ChildPropName="GetEnrolls_inRows" msprop:Generator_UserRelationName="FK_ENROLLS_IN_COURSE" msprop:Generator_ParentPropName="CourseRow" />
      <msdata:Relationship name="FK_ENROLLS_IN_STUDENT" msdata:parent="Student" msdata:child="Enrolls_x0020_in" msdata:parentkey="StudID" msdata:childkey="StudID" msprop:Generator_UserParentTable="Student" msprop:Generator_UserChildTable="Enrolls in" msprop:Generator_RelationVarName="relationFK_ENROLLS_IN_STUDENT" msprop:Generator_ChildPropName="GetEnrolls_inRows" msprop:Generator_ParentPropName="StudentRow" msprop:Generator_UserRelationName="FK_ENROLLS_IN_STUDENT" />
      <msdata:Relationship name="FK_PHONE_ADMIN_ADMIN" msdata:parent="Admin" msdata:child="Phone_admin" msdata:parentkey="AdminID" msdata:childkey="AdminID" msprop:Generator_UserParentTable="Admin" msprop:Generator_UserChildTable="Phone_admin" msprop:Generator_RelationVarName="relationFK_PHONE_ADMIN_ADMIN" msprop:Generator_ChildPropName="GetPhone_adminRows" msprop:Generator_UserRelationName="FK_PHONE_ADMIN_ADMIN" msprop:Generator_ParentPropName="AdminRow" />
      <msdata:Relationship name="FK_PHONE_STUD_STUDENT" msdata:parent="Student" msdata:child="Phone_stud" msdata:parentkey="StudID" msdata:childkey="StudID" msprop:Generator_UserParentTable="Student" msprop:Generator_UserChildTable="Phone_stud" msprop:Generator_RelationVarName="relationFK_PHONE_STUD_STUDENT" msprop:Generator_ChildPropName="GetPhone_studRows" msprop:Generator_ParentPropName="StudentRow" msprop:Generator_UserRelationName="FK_PHONE_STUD_STUDENT" />
      <msdata:Relationship name="FK_REQUIRES_COU_COURSE" msdata:parent="Course" msdata:child="Requires" msdata:parentkey="Ccode" msdata:childkey="Cou_Ccode" msprop:Generator_UserParentTable="Course" msprop:Generator_UserChildTable="Requires" msprop:Generator_RelationVarName="relationFK_REQUIRES_COU_COURSE" msprop:Generator_ChildPropName="GetRequiresRowsByFK_REQUIRES_COU_COURSE" msprop:Generator_UserRelationName="FK_REQUIRES_COU_COURSE" msprop:Generator_ParentPropName="CourseRowByFK_REQUIRES_COU_COURSE" />
      <msdata:Relationship name="FK_REQUIRES_COURSE" msdata:parent="Course" msdata:child="Requires" msdata:parentkey="Ccode" msdata:childkey="Ccode" msprop:Generator_UserParentTable="Course" msprop:Generator_UserChildTable="Requires" msprop:Generator_RelationVarName="relationFK_REQUIRES_COURSE" msprop:Generator_ChildPropName="GetRequiresRowsByFK_REQUIRES_COURSE" msprop:Generator_UserRelationName="FK_REQUIRES_COURSE" msprop:Generator_ParentPropName="CourseRowByFK_REQUIRES_COURSE" />
      <msdata:Relationship name="FK_STUDENT_DEPARTMENT" msdata:parent="Department" msdata:child="Student" msdata:parentkey="DID" msdata:childkey="DID" msprop:Generator_UserParentTable="Department" msprop:Generator_UserChildTable="Student" msprop:Generator_RelationVarName="relationFK_STUDENT_DEPARTMENT" msprop:Generator_ChildPropName="GetStudentRows" msprop:Generator_UserRelationName="FK_STUDENT_DEPARTMENT" msprop:Generator_ParentPropName="DepartmentRow" />
      <msdata:Relationship name="FK_TEACHES_COURSE" msdata:parent="Course" msdata:child="Teaches" msdata:parentkey="Ccode" msdata:childkey="Ccode" msprop:Generator_UserParentTable="Course" msprop:Generator_UserChildTable="Teaches" msprop:Generator_RelationVarName="relationFK_TEACHES_COURSE" msprop:Generator_ChildPropName="GetTeachesRows" msprop:Generator_UserRelationName="FK_TEACHES_COURSE" msprop:Generator_ParentPropName="CourseRow" />
      <msdata:Relationship name="FK_TEACHES_STAFF" msdata:parent="Staff" msdata:child="Teaches" msdata:parentkey="StaffID" msdata:childkey="StaffID" msprop:Generator_UserParentTable="Staff" msprop:Generator_UserChildTable="Teaches" msprop:Generator_RelationVarName="relationFK_TEACHES_STAFF" msprop:Generator_ChildPropName="GetTeachesRows" msprop:Generator_UserRelationName="FK_TEACHES_STAFF" msprop:Generator_ParentPropName="StaffRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>